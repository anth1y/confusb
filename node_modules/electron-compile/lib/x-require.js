'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _url = require('url');

var _url2 = _interopRequireDefault(_url);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function requireModule(href) {
  var filePath = href;

  if (filePath.match(/^file:/i)) {
    var theUrl = _url2.default.parse(filePath);
    filePath = decodeURIComponent(theUrl.pathname);

    if (process.platform === 'win32') {
      filePath = filePath.slice(1);
    }
  }

  // NB: We don't do any path canonicalization here because we rely on
  // InlineHtmlCompiler to have already converted any relative paths that
  // were used with x-require into absolute paths.
  require(filePath);
}

/**
 * @private
 */

exports.default = function () {
  if (process.type !== 'renderer' || !window || !window.document) return null;

  var proto = _lodash2.default.extend(Object.create(HTMLElement.prototype), {
    createdCallback: function createdCallback() {
      var href = this.getAttribute('src');
      if (href && href.length > 0) {
        requireModule(href);
      }
    },
    attributeChangedCallback: function attributeChangedCallback(attrName, oldVal, newVal) {
      if (attrName !== 'src') return;
      requireModule(newVal);
    }
  });

  return document.registerElement('x-require', { prototype: proto });
}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy94LXJlcXVpcmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUdBLFNBQVMsYUFBVCxDQUF1QixJQUF2QixFQUE2QjtBQUMzQixNQUFJLFdBQVcsSUFBWCxDQUR1Qjs7QUFHM0IsTUFBSSxTQUFTLEtBQVQsQ0FBZSxTQUFmLENBQUosRUFBK0I7QUFDN0IsUUFBSSxTQUFTLGNBQUksS0FBSixDQUFVLFFBQVYsQ0FBVCxDQUR5QjtBQUU3QixlQUFXLG1CQUFtQixPQUFPLFFBQVAsQ0FBOUIsQ0FGNkI7O0FBSTdCLFFBQUksUUFBUSxRQUFSLEtBQXFCLE9BQXJCLEVBQThCO0FBQ2hDLGlCQUFXLFNBQVMsS0FBVCxDQUFlLENBQWYsQ0FBWCxDQURnQztLQUFsQztHQUpGOzs7OztBQUgyQixTQWUzQixDQUFRLFFBQVIsRUFmMkI7Q0FBN0I7Ozs7OztrQkFxQmUsWUFBTztBQUNwQixNQUFJLFFBQVEsSUFBUixLQUFpQixVQUFqQixJQUErQixDQUFDLE1BQUQsSUFBVyxDQUFDLE9BQU8sUUFBUCxFQUFpQixPQUFPLElBQVAsQ0FBaEU7O0FBRUEsTUFBSSxRQUFRLGlCQUFFLE1BQUYsQ0FBUyxPQUFPLE1BQVAsQ0FBYyxZQUFZLFNBQVosQ0FBdkIsRUFBK0M7QUFDekQscUJBQWlCLDJCQUFXO0FBQzFCLFVBQUksT0FBTyxLQUFLLFlBQUwsQ0FBa0IsS0FBbEIsQ0FBUCxDQURzQjtBQUUxQixVQUFJLFFBQVEsS0FBSyxNQUFMLEdBQWMsQ0FBZCxFQUFpQjtBQUMzQixzQkFBYyxJQUFkLEVBRDJCO09BQTdCO0tBRmU7QUFNakIsOEJBQTBCLGtDQUFTLFFBQVQsRUFBbUIsTUFBbkIsRUFBMkIsTUFBM0IsRUFBbUM7QUFDM0QsVUFBSSxhQUFhLEtBQWIsRUFBb0IsT0FBeEI7QUFDQSxvQkFBYyxNQUFkLEVBRjJEO0tBQW5DO0dBUGhCLENBQVIsQ0FIZ0I7O0FBZ0JwQixTQUFPLFNBQVMsZUFBVCxDQUF5QixXQUF6QixFQUFzQyxFQUFFLFdBQVcsS0FBWCxFQUF4QyxDQUFQLENBaEJvQjtDQUFOIiwiZmlsZSI6IngtcmVxdWlyZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgdXJsIGZyb20gJ3VybCc7XG5cbmZ1bmN0aW9uIHJlcXVpcmVNb2R1bGUoaHJlZikge1xuICBsZXQgZmlsZVBhdGggPSBocmVmO1xuICBcbiAgaWYgKGZpbGVQYXRoLm1hdGNoKC9eZmlsZTovaSkpIHtcbiAgICBsZXQgdGhlVXJsID0gdXJsLnBhcnNlKGZpbGVQYXRoKTtcbiAgICBmaWxlUGF0aCA9IGRlY29kZVVSSUNvbXBvbmVudCh0aGVVcmwucGF0aG5hbWUpO1xuXG4gICAgaWYgKHByb2Nlc3MucGxhdGZvcm0gPT09ICd3aW4zMicpIHtcbiAgICAgIGZpbGVQYXRoID0gZmlsZVBhdGguc2xpY2UoMSk7XG4gICAgfVxuICB9XG4gIFxuICAvLyBOQjogV2UgZG9uJ3QgZG8gYW55IHBhdGggY2Fub25pY2FsaXphdGlvbiBoZXJlIGJlY2F1c2Ugd2UgcmVseSBvblxuICAvLyBJbmxpbmVIdG1sQ29tcGlsZXIgdG8gaGF2ZSBhbHJlYWR5IGNvbnZlcnRlZCBhbnkgcmVsYXRpdmUgcGF0aHMgdGhhdFxuICAvLyB3ZXJlIHVzZWQgd2l0aCB4LXJlcXVpcmUgaW50byBhYnNvbHV0ZSBwYXRocy5cbiAgcmVxdWlyZShmaWxlUGF0aCk7XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqLyBcbmV4cG9ydCBkZWZhdWx0ICgoKSA9PiB7XG4gIGlmIChwcm9jZXNzLnR5cGUgIT09ICdyZW5kZXJlcicgfHwgIXdpbmRvdyB8fCAhd2luZG93LmRvY3VtZW50KSByZXR1cm4gbnVsbDtcbiAgXG4gIGxldCBwcm90byA9IF8uZXh0ZW5kKE9iamVjdC5jcmVhdGUoSFRNTEVsZW1lbnQucHJvdG90eXBlKSwge1xuICAgIGNyZWF0ZWRDYWxsYmFjazogZnVuY3Rpb24oKSB7XG4gICAgICBsZXQgaHJlZiA9IHRoaXMuZ2V0QXR0cmlidXRlKCdzcmMnKTtcbiAgICAgIGlmIChocmVmICYmIGhyZWYubGVuZ3RoID4gMCkge1xuICAgICAgICByZXF1aXJlTW9kdWxlKGhyZWYpO1xuICAgICAgfVxuICAgIH0sIFxuICAgIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjazogZnVuY3Rpb24oYXR0ck5hbWUsIG9sZFZhbCwgbmV3VmFsKSB7XG4gICAgICBpZiAoYXR0ck5hbWUgIT09ICdzcmMnKSByZXR1cm47XG4gICAgICByZXF1aXJlTW9kdWxlKG5ld1ZhbCk7XG4gICAgfVxuICB9KTtcblxuICByZXR1cm4gZG9jdW1lbnQucmVnaXN0ZXJFbGVtZW50KCd4LXJlcXVpcmUnLCB7IHByb3RvdHlwZTogcHJvdG8gfSk7XG59KSgpO1xuIl19