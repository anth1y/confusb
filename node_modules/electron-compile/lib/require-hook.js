'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = registerRequireExtension;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _mimeTypes = require('mime-types');

var _mimeTypes2 = _interopRequireDefault(_mimeTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Initializes the node.js hook that allows us to intercept files loaded by 
 * node.js and rewrite them. This method along with {@link initializeProtocolHook} 
 * are the top-level methods that electron-compile actually uses to intercept 
 * code that Electron loads.
 *  
 * @param  {CompilerHost} compilerHost  The compiler host to use for compilation.
 */
function registerRequireExtension(compilerHost) {
  _lodash2.default.each(Object.keys(compilerHost.compilersByMimeType), function (mimeType) {
    var ext = _mimeTypes2.default.extension(mimeType);

    require.extensions['.' + ext] = function (module, filename) {
      var _compilerHost$compile = compilerHost.compileSync(filename);

      var code = _compilerHost$compile.code;

      module._compile(code, filename);
    };
  });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9yZXF1aXJlLWhvb2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBV3dCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFULFNBQVMsd0JBQVQsQ0FBa0MsWUFBbEMsRUFBZ0Q7QUFDN0QsbUJBQUUsSUFBRixDQUFPLE9BQU8sSUFBUCxDQUFZLGFBQWEsbUJBQWIsQ0FBbkIsRUFBc0QsVUFBQyxRQUFELEVBQWM7QUFDbEUsUUFBSSxNQUFNLG9CQUFVLFNBQVYsQ0FBb0IsUUFBcEIsQ0FBTixDQUQ4RDs7QUFHbEUsWUFBUSxVQUFSLE9BQXVCLEdBQXZCLElBQWdDLFVBQUMsTUFBRCxFQUFTLFFBQVQsRUFBc0I7a0NBQ3ZDLGFBQWEsV0FBYixDQUF5QixRQUF6QixFQUR1Qzs7VUFDL0Msa0NBRCtDOztBQUVwRCxhQUFPLFFBQVAsQ0FBZ0IsSUFBaEIsRUFBc0IsUUFBdEIsRUFGb0Q7S0FBdEIsQ0FIa0M7R0FBZCxDQUF0RCxDQUQ2RDtDQUFoRCIsImZpbGUiOiJyZXF1aXJlLWhvb2suanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IG1pbWVUeXBlcyBmcm9tICdtaW1lLXR5cGVzJztcblxuLyoqXG4gKiBJbml0aWFsaXplcyB0aGUgbm9kZS5qcyBob29rIHRoYXQgYWxsb3dzIHVzIHRvIGludGVyY2VwdCBmaWxlcyBsb2FkZWQgYnkgXG4gKiBub2RlLmpzIGFuZCByZXdyaXRlIHRoZW0uIFRoaXMgbWV0aG9kIGFsb25nIHdpdGgge0BsaW5rIGluaXRpYWxpemVQcm90b2NvbEhvb2t9IFxuICogYXJlIHRoZSB0b3AtbGV2ZWwgbWV0aG9kcyB0aGF0IGVsZWN0cm9uLWNvbXBpbGUgYWN0dWFsbHkgdXNlcyB0byBpbnRlcmNlcHQgXG4gKiBjb2RlIHRoYXQgRWxlY3Ryb24gbG9hZHMuXG4gKiAgXG4gKiBAcGFyYW0gIHtDb21waWxlckhvc3R9IGNvbXBpbGVySG9zdCAgVGhlIGNvbXBpbGVyIGhvc3QgdG8gdXNlIGZvciBjb21waWxhdGlvbi5cbiAqLyBcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlZ2lzdGVyUmVxdWlyZUV4dGVuc2lvbihjb21waWxlckhvc3QpIHtcbiAgXy5lYWNoKE9iamVjdC5rZXlzKGNvbXBpbGVySG9zdC5jb21waWxlcnNCeU1pbWVUeXBlKSwgKG1pbWVUeXBlKSA9PiB7XG4gICAgbGV0IGV4dCA9IG1pbWVUeXBlcy5leHRlbnNpb24obWltZVR5cGUpO1xuICAgIFxuICAgIHJlcXVpcmUuZXh0ZW5zaW9uc1tgLiR7ZXh0fWBdID0gKG1vZHVsZSwgZmlsZW5hbWUpID0+IHtcbiAgICAgIGxldCB7Y29kZX0gPSBjb21waWxlckhvc3QuY29tcGlsZVN5bmMoZmlsZW5hbWUpO1xuICAgICAgbW9kdWxlLl9jb21waWxlKGNvZGUsIGZpbGVuYW1lKTtcbiAgICB9O1xuICB9KTtcbn1cbiJdfQ==